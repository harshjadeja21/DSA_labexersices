partA question1(A)
pseudo code 
Algorithm Find_Max_Min(arr, n)
    Set max to arr[0]
    Set min to arr[0]
    For i from 1 to n-1 do
        If arr[i] > max then
            Set max to arr[i]
        End If
        If arr[i] < min then
            Set min to arr[i]
        End If
    End For
    Return max and min
End Algorithm

#include <iostream>
using namespace std;

int main() {
    int arr[100], n;
    int max, min;

    cout << "Enter number of elements: ";
    cin >> n;

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    max = arr[0];
    min = arr[0];

    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
        if (arr[i] < min) {
            min = arr[i];
        }
    }

    cout << "Maximum: " << max << endl;
    cout << "Minimum: " << min << endl;

    return 0;
}
Time Complexity: O(n)
Space Complexity: O(1)

part A question 1(B)
pseudo code 
Algorithm Count_Odd_Even(arr, n)
    Set odd_count to 0
    Set even_count to 0
    For i from 0 to n-1 do
        If arr[i] % 2 == 0 then
            Increase even_count by 1
        Else
            Increase odd_count by 1
        End If
    End For
    Return odd_count and even_count
End Algorithm

#include <iostream>
using namespace std;

int main() {
    int arr[100], n;
    int odd = 0, even = 0;

    cout << "Enter number of elements: ";
    cin >> n;

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }

    cout << "Even numbers: " << even << endl;
    cout << "Odd numbers: " << odd << endl;

    return 0;
}
Time Complexity: O(n)
Space Complexity: O(1)

part A question 1(c)
pseudo code
Algorithm Reverse_Array(arr, n)
    Set start = 0
    Set end = n - 1
    While start < end do
        Swap arr[start] and arr[end]
        Increase start by 1
        Decrease end by 1
    End While
    Return arr
End Algorithm

#include <iostream>
using namespace std;

int main() {
    int arr[100], n;

    cout << "Enter number of elements: ";
    cin >> n;

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Reverse the array
    int start = 0;
    int end = n - 1;
    while (start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;

        start++;
        end--;
    }

    cout << "Reversed array:\n";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
Time Complexity: O(n)
Space Complexity: O(1)

